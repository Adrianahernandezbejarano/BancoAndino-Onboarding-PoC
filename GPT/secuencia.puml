@startuml
!theme plain
skinparam backgroundColor #FEFEFE
skinparam sequenceMessageAlign center

actor Cliente
participant "App Banco\nAndino" as App
participant "API Gateway" as API
participant "Lambda\nOrquestador" as Lambda
participant "S3" as S3
participant "OCR/IDP\n(Textract)" as OCR
participant "Motor de\nComparaciÃ³n" as Comparador
participant "Motor de\nReglas/IA" as MotorIA
participant "DynamoDB" as DB
participant "Generador de\nReportes" as Reportes
participant "SNS/SQS" as Notif
participant "Backoffice\nAnalista" as Analista

Cliente -> App: 1. Completa formulario\ny carga documentos
App -> API: 2. POST /onboarding\n{formulario, documentos}
API -> Lambda: 3. Invoca funciÃ³n\norquestadora

Lambda -> S3: 4. Almacena documentos
S3 --> Lambda: 4.1. URL documentos

Lambda -> DB: 5. Guarda formulario\ny metadata
DB --> Lambda: 5.1. ID solicitud

Lambda -> OCR: 6. Extrae datos\nde documentos
activate OCR
OCR -> OCR: 6.1. Textract\nprocesa imÃ¡genes
OCR --> Lambda: 6.2. Datos extraÃ­dos\n(JSON estructurado)
deactivate OCR

Lambda -> Comparador: 7. Compara datos\nformulario vs documentos
activate Comparador
Comparador -> Comparador: 7.1. ValidaciÃ³n\ncampo por campo
Comparador -> Comparador: 7.2. Fuzzy matching\npara textos
Comparador --> Lambda: 7.3. Lista de\ninconsistencias
deactivate Comparador

Lambda -> MotorIA: 8. EvalÃºa con\nreglas e IA
activate MotorIA
MotorIA -> MotorIA: 8.1. Aplica reglas\nde negocio
MotorIA -> MotorIA: 8.2. ML: scoring\nde riesgo
MotorIA -> MotorIA: 8.3. ClasificaciÃ³n:\nAPROBADO/REVISIÃ“N/RECHAZADO
MotorIA --> Lambda: 8.4. DecisiÃ³n y score
deactivate MotorIA

Lambda -> DB: 9. Actualiza estado\ny resultados
DB --> Lambda: 9.1. ConfirmaciÃ³n

Lambda -> Reportes: 10. Genera reporte\nde validaciÃ³n
activate Reportes
Reportes -> Reportes: 10.1. Consolida\ninconsistencias
Reportes -> S3: 10.2. Guarda reporte PDF
Reportes --> Lambda: 10.3. URL reporte
deactivate Reportes

alt Caso requiere revisiÃ³n humana
    Lambda -> Notif: 11. Notifica a analista
    Notif -> Analista: 11.1. Email/Dashboard\nalerta
    
    Analista -> App: 12. Accede dashboard
    Analista -> DB: 13. Consulta detalles\nde solicitud
    DB --> Analista: 13.1. Datos completos
    
    Analista -> Analista: 14. Revisa y decide
    Analista -> DB: 15. Actualiza decisiÃ³n\nfinal
    
    DB -> Notif: 16. Trigger notificaciÃ³n
    Notif -> Cliente: 16.1. Notifica resultado
else Caso aprobado automÃ¡ticamente
    Lambda -> Notif: 11. Notifica aprobaciÃ³n
    Notif -> Cliente: 11.1. Email de\naprobaciÃ³n
end

Lambda --> API: 17. Respuesta inicial
API --> App: 18. Status: En proceso
App --> Cliente: 19. ConfirmaciÃ³n\nde recepciÃ³n

@enduml
